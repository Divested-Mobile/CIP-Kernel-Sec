description: |-
  The ecryptfs_privileged_open function in fs/ecryptfs/kthread.c in the Linux
  kernel before 4.6.3 allows local users to gain privileges or cause a denial
  of service (stack memory consumption) via vectors involving crafted mmap
  calls for /proc pathnames, leading to recursive pagefault handling.
references:
- https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-1583
- http://www.ubuntu.com/usn/usn-2996-1
- http://www.ubuntu.com/usn/usn-2997-1
- http://www.ubuntu.com/usn/usn-2998-1
- http://www.ubuntu.com/usn/usn-2999-1
- http://www.ubuntu.com/usn/usn-3000-1
- http://www.ubuntu.com/usn/usn-3001-1
- http://www.ubuntu.com/usn/usn-3002-1
- http://www.ubuntu.com/usn/usn-3003-1
- http://www.ubuntu.com/usn/usn-3004-1
- http://www.ubuntu.com/usn/usn-3005-1
- http://www.ubuntu.com/usn/usn-3006-1
- http://www.ubuntu.com/usn/usn-3007-1
- http://www.ubuntu.com/usn/usn-3008-1
- https://bugs.launchpad.net/bugs/1588871
- http://www.openwall.com/lists/oss-security/2016/06/10/8
- https://usn.ubuntu.com/usn/usn-2996-1
- https://usn.ubuntu.com/usn/usn-2997-1
- https://usn.ubuntu.com/usn/usn-2998-1
- https://usn.ubuntu.com/usn/usn-2999-1
- https://usn.ubuntu.com/usn/usn-3000-1
- https://usn.ubuntu.com/usn/usn-3001-1
- https://usn.ubuntu.com/usn/usn-3002-1
- https://usn.ubuntu.com/usn/usn-3003-1
- https://usn.ubuntu.com/usn/usn-3004-1
- https://usn.ubuntu.com/usn/usn-3005-1
- https://usn.ubuntu.com/usn/usn-3006-1
- https://usn.ubuntu.com/usn/usn-3007-1
- https://usn.ubuntu.com/usn/usn-3008-1
comments:
  Debian-bwh: |-
    The issue here is:
    1. ecryptfs never uses mmap() on the lower file, so did not check
    that it was implemented.
    2. procfs includes files that map to (part of) a process's VM.
    3. mount.ecryptfs_private is setuid-root and allows layering over any
    directory owned by the caller.
    So it was possible to mmap part of an ecryptfs file layered on a procfs
    file that maps to another mmapped region, and then to chain mappings
    to an arbitrary depth.  This could result in calling page fault
    handlers recursively, again to an arbitrary depth.  Either the procfs
    change *or* the ecryptfs change should be sufficient to fix this.
    The procfs fix depends on commit 69c433ed2ecd (3.18) which is an ABI
    breaker.
    The ecryptfs fix depends on the commit carnil mentioned.
    The first ecryptfs fix prevents reading directories on many underlying
    filesystems.  It was reverted upstream and replaced with commit
    f0fe970df383.  But with this version it's important to have the procfs
    fix as well.
  Debian-carnil: |-
    backport to kernels pre 4.6 need to cherry-pick 6a480a7842545ec520a91730209ec0bae41694c1 (4.6)
    as well.
  Ubuntu-jdstrand: |-
    android kernels (flo, goldfish, grouper, maguro, mako and manta) are
     not supported on the Ubuntu Touch 14.10 and earlier preview kernels
    linux-lts-saucy no longer receives official support
    linux-lts-quantal no longer receives official support
reporters:
- Jann Horn
introduced-by:
  mainline: [237fead619984cc48818fe12ee0ceada3f55b012]
fixed-by:
  linux-3.16.y: [d9ce899cd99c1b22fb991a5942a1e0e504f6f498, a0b5c04dfca69e9728b1c454c6f9fde9f8f38613]
  linux-3.18.y: [70e21269e3ec8e4345e7fcd263f9a8f2a43f42df, 8c8e669bb8c5f690976883dd3b7a32d605c58d9a,
    f5efbbc2bd0a4f30c4f312f9d867ff7ef18df2f9]
  linux-3.2.y: [ef1b32244bb960a0b5243126042fe60ce58b4c91, cf3069a14a9cccdd89d2b482f9eee5e37ebe25a6]
  linux-4.1.y: [c96e6bf5705254a4c93ca25d6d3c68a04fc7ab5b, bda373bb186b027786681f930959deb56f4de01b]
  linux-4.4.y: [9beb96b344c846779f67d1be1cdafc66562b94ec, ed5c955e31ff07fa74738b6e0d94c5c17ebbf7c7,
    c08b1a593a042ae01e788ec5504bee2cfc83e1f2]
  linux-4.6.y: [c4fd3264feffb503336a43f9bf132d9d385678b5, f7803b2f5df81030a22ffce4cddd79423d61f099,
    80f7d5b00a4d325e114d4dff2e77c632f811a589]
  mainline: [e54ad7f1ee263ffa5a2de9c609d58dfa27b21cd9, f0fe970df3838c202ef6c07a4c2b36838ef0a88b,
    29d6455178a09e1dc340380c582b13356227e8df]
fix-depends-on:
  69c433ed2ecd2d3264efd7afec4439524b319121: |-
    This introduces the filesystem stacking count and limit, which the
    fix in procfs depends on.
