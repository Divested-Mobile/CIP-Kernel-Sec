description: |-
  The sock_setsockopt function in net/core/sock.c in the Linux kernel before
  4.8.14 mishandles negative values of sk_sndbuf and sk_rcvbuf, which allows
  local users to cause a denial of service (memory corruption and system
  crash) or possibly have unspecified other impact by leveraging the
  CAP_NET_ADMIN capability for a crafted setsockopt system call with the (1)
  SO_SNDBUFFORCE or (2) SO_RCVBUFFORCE option.
references:
- https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-9793
- http://www.openwall.com/lists/oss-security/2016/12/02
- https://github.com/torvalds/linux/commit/b98b0bc8c431e3ceb4b26b0dfc8db509518fb290
- http://www.ubuntu.com/usn/usn-3168-1
- http://www.ubuntu.com/usn/usn-3168-2
- http://www.ubuntu.com/usn/usn-3169-1
- http://www.ubuntu.com/usn/usn-3169-2
- http://www.ubuntu.com/usn/usn-3169-3
- http://www.ubuntu.com/usn/usn-3169-4
- http://www.ubuntu.com/usn/usn-3170-1
- http://www.ubuntu.com/usn/usn-3170-2
comments:
  Ubuntu-sbeattie: |-
    the overflows exist for SO_{SND|RCV}BUFFORCE, so it's
      possible for a process with CAP_NET_ADMIN to do this. However,
      the check for CAP_NET_ADMIN is via capable() *not* ns_capable(),
      so the process attempting this has to have CAP_NET_ADMIN in the
      init_ns; having it in a new user namespace (i.e. via unshare()) is
      not sufficient. Thus, this cannot be exploited by an unprivileged
      user dropping into an unprivileged user namespace. Hence the
      low priority.
reporters:
- Andrey Konovalov
introduced-by:
  mainline: [82981930125abfd39d7c8378a9cfdf5e1be2002b]
fixed-by:
  mainline: [b98b0bc8c431e3ceb4b26b0dfc8db509518fb290]
