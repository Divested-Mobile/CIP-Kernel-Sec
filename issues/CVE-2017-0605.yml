description: 'trace: resolve stack corruption due to string copy'
references:
- https://source.android.com/security/bulletin/2017-05-01
- https://source.codeaurora.org/quic/la//kernel/msm-3.10/commit/?id=2161ae9a70b12cf18ac8e5952a20161ffbccb477
- https://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git/commit?id=e09e28671cda63e6308b31798b997639120e2a21
- https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0605
comments:
  Debian-bwh: |-
    trace_find_cmdline() copies a command name out of the cache
    (saved_cmdlines) that was first copied from task_struct::comm.
    That first copy is done without holding the task lock, which can
    result in reading a garbled name.  However, it is also done with
    memcpy(), so it always includes the last byte which is always
    written as 0.  So this seems like a theoretical issue, but maybe
    I'm missing something.  Also, the fix sets a maximum length 1
    byte too short.
    The upstream commit message seems to agree with this.
  Debian-jmm: From Android security bulletin, not sure if it's also an issue with
    mainline
  Ubuntu-jdstrand: |-
    android kernels (flo, goldfish, grouper, maguro, mako and manta) are
     not supported on the Ubuntu Touch 14.10 and earlier preview kernels
    linux-lts-saucy no longer receives official support
    linux-lts-quantal no longer receives official support
  Ubuntu-sbeattie: as of 2017-05-02, unfixed upstream
