description: 'crypto: rng - Remove old low-level rng interface'
references:
- https://bugzilla.redhat.com/show_bug.cgi?id=1485815 (not accessible)
- https://bugzilla.redhat.com/show_bug.cgi?id=1514609
- https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-15116
- http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=94f1bb15bed84ad6c893916b7e7b9db6f1d7eec6
- https://bugzilla.redhat.com/show_bug.cgi?id=1485815
- https://github.com/torvalds/linux/commit/94f1bb15bed84ad6c893916b7e7b9db6f1d7eec6
comments:
  Debian-bwh: |-
    Clearly we can't apply the upstream fix for this, but need to guard
    against the null pointer somehow.  I can't work out which pointer
    can be null though.
    I've now looked at the RHEL 7 update, and the comment indicates
    that the vulnerable code is in crypto/drbg.c.  I verified that
    it does have a weird special case for slen == 0 && seed != NULL
    which no other RNG does.  This was added in mainline in 3.17 and
    then backported to RHEL's 3.10 branch.
  Ubuntu-sbeattie: |-
    looks like it's a series of commits to stop using the old
      interface. Conversion begins with acec27ff35af9caf34d76d16ee17ff3b292e7d83
introduced-by:
  mainline: [541af946fe1360ec1b45730964e87d7f93c50781]
fixed-by:
  mainline: [94f1bb15bed84ad6c893916b7e7b9db6f1d7eec6]
