description: information leak within a KVM guest
references:
- https://www.openwall.com/lists/oss-security/2020/01/30/4
- https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-3016
comments:
  Debian-bwh: |-
    I think it was introduced by 858a43aae236 ("KVM: X86: use
    paravirtualized TLB Shootdown", as that introduced the second
    flag in kvm_steal_time::preempted which is being cleared.
    I believe the additional fixes *are* needed for 4.19.
  Debian-carnil: |-
    Issue present since 0b9f6c4615c99 ("x86/kvm: Support the vCPU
    preemption check") in 4.10-rc1. But might need double-check.
    Fixed as well in 5.4.19. For 4.19.103 only one commit was
    backported, is this already sufficient?
  Ubuntu-cascardo: |-
    It is thought that issue does not affect Intel processors
     *not* supporting Process-Context Identifiers (PCIDs). You can check
     support for PCIDs on systems with Intel processors by running "grep pcid
     /proc/cpuinfo" and verifying that "pcid" shows as one of the flags.
    it was mentioned that it was only easily reproducible on AMD
     CPUs.
  Ubuntu-tyhicks: |-
    This issue does not affect default installations of Ubuntu as the
     paravirtual TLB flush feature in KVM is not enabled by default. The QEMU CPU
     feature "kvm-pv-tlb-flush" is used to enable paravirtual TLB flush.
introduced-by:
  mainline: [0b9f6c4615c993d2b552e0d2bd1ade49b56e5beb]
fixed-by:
  linux-4.19.y: [68460ceba319a46ea14b36129bfd0a152e0f00c3]
  linux-5.4.y: [68460ceba319a46ea14b36129bfd0a152e0f00c3, a3db2949904b81ae53a840d99f71021f02a01fd3,
    f7c1a6c67ff36532f1b0b339e3aae7701a2c0b1e, d71eef9fcc0b81fd56e59afd305a215d81239894,
    2aebc6ed84efeb1e255fd6417f9230388f2206cd]
  linux-5.5.y: [06b34107899d1b004462c9d2e52ff5a146ee9898, f6ad4449ddeffec8bf492ad495c2fc4e45ff2d42,
    072690664a42b688b4a7620b9ad97add92918fbb, 91fefc3e32294f16099d768a51492e56399dcb54,
    43ba65a5394cd4e153cca878a9e0d475ba62b7e3]
  mainline: [8c6de56a42e0c657955e12b882a81ef07d1d073e, 1eff70a9abd46f175defafd29bc17ad456f398a7,
    917248144db5d7320655dbb41d3af0b8a0f3d589, b043138246a41064527cf019a3d51d9f015e9796,
    a6bd811f1209fe1c64c9f6fd578101d6436c6b6e]
