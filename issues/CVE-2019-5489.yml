description: |-
  The mincore() implementation in mm/mincore.c in the Linux kernel through
  4.19.13 allowed local attackers to observe page cache access patterns of
  other processes on the same system, potentially allowing sniffing of secret
  information. (Fixing this affects the output of the fincore program.)
  Limited remote exploitation may be possible, as demonstrated by latency
  differences in accessing public files from an Apache HTTP Server.
references:
- https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-5489
- https://www.openwall.com/lists/oss-security/2019/01/07/2
- https://arxiv.org/pdf/1901.01161.pdf
- https://www.openwall.com/lists/oss-security/2019/01/07/1
- https://www.theregister.co.uk/2019/01/05/boffins_beat_page_cache/
- https://arxiv.org/abs/1901.01161
- https://bugzilla.suse.com/show_bug.cgi?id=1120843
- https://twitter.com/lavados/status/1081205802046607361
- https://lore.kernel.org/lkml/CAHk-=wiqbKEC5jUXr3ax+oUuiRrp=QMv_ZnUfO-SPv=UNJ-OTw@mail.gmail.com/T/#mf09fc35229f38e5b657f299a3a3865c8ca39e7e1
comments:
  Debian-carnil: |-
    574823bfab82d9d8fa47f422778043fbb4b4f50e was marked explicitly
    not yet for stable as it is expected to check if there are issues
    with this approach. There are enough tools which depend on mincore()
    to try to tell wheter a file is loaded in cache or not.
reporters:
- Daniel Gruss
- Erik Kraft
- Trishita Tiwari
- Michael Schwarz
- Ari Trachtenberg
- Jason Hennessey
- Alex Ionescu
- Anders Fogh
fixed-by:
  mainline: [574823bfab82d9d8fa47f422778043fbb4b4f50e]
