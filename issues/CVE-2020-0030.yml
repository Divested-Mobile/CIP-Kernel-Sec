description: 'ANDROID: binder: synchronize_rcu() when using POLLFREE'
references:
- https://source.android.com/security/bulletin/2020-02-01.html
- https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0030
- https://security-tracker.debian.org/tracker/CVE-2020-0030
- https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=5eeb2ca02a2f6084fc57ae5c244a38baab07033a
comments:
  Ubuntu-cascardo: |-
    This seems to be like that since binder was added to the
     kernel, ie., binder would allow the thread to be freed while its wait
     member was still in the epoll waitqueue.
    Description was taken from patch's comment, as it describes
     the specific race condition that makes this different from CVE-2019-2215.
     I added the first sentence which would be a fair description of both
     this CVE and CVE-2019-2215.
introduced-by:
  mainline: [f5cb779ba16334b45ba8946d6bfa6d9834d1527f]
fixed-by:
  linux-4.14.y: [441b5d10e4602b25ad960d1ca1c6bb77e788c220]
  linux-4.4.y: [fcf46dcedbc419633771e16bfdf97a528f4d7dab]
  linux-4.4.y-cip: [fcf46dcedbc419633771e16bfdf97a528f4d7dab]
  linux-4.4.y-cip-rt: [fcf46dcedbc419633771e16bfdf97a528f4d7dab]
  linux-4.9.y: [b6c6212514fe9f2387fc6677181028d4a9ae20c7]
  mainline: [5eeb2ca02a2f6084fc57ae5c244a38baab07033a]
