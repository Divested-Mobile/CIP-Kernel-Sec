description: In xfrm6_tunnel_free_spi of net/ipv6/xfrm6_tunnel.c, there is a possible
  use after free due to improper locking
references:
- https://source.android.com/security/bulletin/pixel/2020-12-01
- https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-27066
- https://bugzilla.suse.com/show_bug.cgi?id=1180098
comments:
  debian/bwh: |-
    Commit 4c59406ed003 fixes double-free of xfrm_policy, but I'm
    not sure how it relates to a use-after-free in xfrm6_tunnel
    (xfrm6_tunnel_free_spi() is called via __xfrm_state_destroy(),
    via xfrm_state_put(), so what calls that?).  However I agree
    it is the only commit in that range that could plausibly have
    fixed the issue.
  debian/carnil: |-
    From contact with the Android security team we only know:
    Android Security team did some research on the 4.14.y series
    which they use in this product and found that apparently a code
    change between 4.14.170 and 4.14.180 fixed the issue. It was
    though not clear exactly which change resolved the
    vulnerability. For 4.14.y it is believed that all versions from
    4.14.180 up are fixed. This still leaves open which is/are the
    upstream commits adressing the issue and so to determine the
    state for the other branches.
    Could it be possibly related to 4c59406ed003 ("xfrm: policy:
    Fix doulbe free in xfrm_policy_timer") which was 5.6, 5.5.14,
    5.4.29, 4.19.114, 4.14.175, 4.9.218 and 4.4.218?
    Android Security team indicated that this indeed seem a good
    candidate.
  ubuntu/sbeattie: unclear what issue/kernel commit google is referencing here.
  wens: Curiously, there are no changes to net/ipv6/xfrm6_tunnel.c between 4.14.170
    and 4.14.180.
fixed-by:
  debian/buster-security: ['version:debian/4.19.118-1']
  debian/stretch-security: ['version:debian/4.9.228-1']
  mainline: [4c59406ed00379c8663f8663d82b2537467ce9d7]
  stable/4.19: [7ad217a824f7fab1e8534a6dfa82899ae1900bcb]
  stable/4.9: [86e98ce7de083649e330d518e98a80b9e39b5d43]
