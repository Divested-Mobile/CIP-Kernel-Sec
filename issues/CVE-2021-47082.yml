description: 'tun: avoid double free in tun_free_netdev'
references:
- https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-47082
- https://git.kernel.org/stable/c/8eb43d635950e27c29f1e9e49a23b31637f37757
- https://git.kernel.org/stable/c/0c0e566f0387490d16f166808c72e9c772027681
- https://git.kernel.org/stable/c/a01a4e9f5dc93335c716fa4023b1901956e8c904
- https://git.kernel.org/stable/c/3cb5ae77799e8ed6ec3fec0b6b4cd07f01650cc5
- https://git.kernel.org/stable/c/158b515f703e75e7d68289bf4d98c664e1d632df
- https://lore.kernel.org/linux-cve-announce/2024030451-CVE-2021-47082-b12c@gregkh/
- https://git.kernel.org/linus/158b515f703e75e7d68289bf4d98c664e1d632df
- https://www.cve.org/CVERecord?id=CVE-2021-47082
comments:
  cip/cip-kernel-sec: There is no mention of the commit that introduced the bug in
    the CVE announcement.Fixed in v5.16-rc7.
  cip/masami: It seems as if Linux 4.4 may be affected.
  debian/carnil: First introducing commit could not be determined.
  ubuntu/bjamison: |-
    3.13 and 4.4 kernels are not affected as they predate the
     'priv_destructor' callback, which in newer kernels is called by
     'register_netdev' when it fails. Since the old-style destructor is
     only called when a net device is unregistered, we'd only be freeing
     'tun->security' once when 'register_netdev' fails, or once when the
     device is unregistered.
fixed-by:
  cip/4.19: [8eb43d635950e27c29f1e9e49a23b31637f37757]
  cip/4.19-rt: [8eb43d635950e27c29f1e9e49a23b31637f37757]
  cip/5.10: [a01a4e9f5dc93335c716fa4023b1901956e8c904]
  cip/5.10-rt: [a01a4e9f5dc93335c716fa4023b1901956e8c904]
  debian/buster-security: ['version:debian/4.19.282-1']
  mainline: [158b515f703e75e7d68289bf4d98c664e1d632df]
  stable/4.19: [8eb43d635950e27c29f1e9e49a23b31637f37757]
  stable/5.10: [a01a4e9f5dc93335c716fa4023b1901956e8c904]
  stable/5.15: [3cb5ae77799e8ed6ec3fec0b6b4cd07f01650cc5]
  stable/5.4: [0c0e566f0387490d16f166808c72e9c772027681]
  ubuntu/focal: [8d442b46f0491c642830b990d6e194eba2802be6]
