description: |-
  An out of bounds access was discovered in nf_tables expression evaluation
  due to validation of user register indices. It leads to local privilege
  escalation, for example by overwriting a stack return address OOB with
  a crafted nft_expr_payload.
references:
- https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1015
- https://www.openwall.com/lists/oss-security/2022/03/28/5
- https://ubuntu.com/security/notices/USN-5381-1
- https://ubuntu.com/security/notices/USN-5383-1
comments:
  debian/bwh: |-
    If I understand this correctly, the issue is that nft_parse_register()
    could return a very large register number that would lead to integer
    overflow in the range check in nft_validate_register_{load,store}().
    This was not exploitable before commit 345023b0db3 because all in-tree
    callers truncated the return value of nft_parse_register() to 8 bits
    before passing it on to nft_validate_register_{load,store}().
    I also didn't find any out-of-tree modules using nft_parse_register()
    through codesearch.debian.net or GitHub.
  debian/carnil: |-
    Exploitable starting from commit 345023b0db3 ("netfilter:
    nftables: add nft_parse_register_store() and use it") in
    5.12-rc1 but bug present since commit 49499c3e6e18 ("netfilter:
    nf_tables: switch registers to 32 bit addressing") in 4.1-rc1
    Fixed in 5.17.1 for 5.17.y and 5.16.18 for 5.16.y.
  masami: |-
    This root cuase was introduced by commit 49499c3
    ("netfilter: nf_tables: switch registers to 32 bit addressing")
    which merged in 4.1-rc. However, it exploitable by commit 345023b
    ("netfilter: nftables: add nft_parse_register_store() and use it")
    which merged in 5.12-rc1-dontuse.
    Therefore, earlier than 5.12 kernels have OOB bug but they wouldn't
    exploit via this bug.
  ubuntu/sbeattie: |-
    requires CAP_NET_ADMIN, however this can be done within a new
     user namespace and network namespace - so can be mitigated by disabling
     unprivileged user namespaces.
reporters:
- David Bouman
introduced-by:
  mainline: [49499c3e6e18b7677a63316f3ff54a16533dc28f]
fixed-by:
  mainline: [6e1acfa387b9ff82cfc7db8cc3b6959221a95851]
  stable/5.15: [1bd57dea456149619f3b80d67eee012122325af8]
  stable/5.16: [2c8ebdaa7c9755b85d90c07530210e83665bad9a]
  stable/5.17: [afdc3f4b81f0ec9f97f0910476af4620a2481a6d]
ignore:
  cip/4.19: Not exploitable
  cip/4.19-rt: Not exploitable
  cip/4.4: Not exploitable
  cip/4.4-rt: Not exploitable
  cip/4.4-st: Not exploitable
  cip/5.10: Not exploitable
  stable/5.10: Not exploitable
  stable/5.4: Not exploitable
  stable/5.9: Not exploitable
