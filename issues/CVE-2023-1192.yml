description: use-after-free in smb2_is_status_io_timeout()
references:
- https://bugzilla.redhat.com/show_bug.cgi?id=2154178
- https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1192
- https://bugzilla.suse.com/show_bug.cgi?id=1208995
- https://bugzilla.redhat.com/show_bug.cgi?id=2154178#c24
- https://lore.kernel.org/linux-cifs/ZZgFEX3QNWWj_VxA@eldamar.lan
- https://lore.kernel.org/linux-cifs/aca1c4e755e8c005b874c57a6210c4c6a34d2324.camel@debian.org/
- https://www.cve.org/CVERecord?id=CVE-2023-1192
comments:
  debian/bwh: |-
    Introduced in 5.10 by commit 8e670f77c4a5 "Handle STATUS_IO_TIMEOUT
    gracefully".  I posted my analysis and an untested patch on RHBZ.
  debian/carnil: |-
    Paulo Alcantara replied that this issue is supposed to be fixed
    with d527f51331ca ("cifs: Fix UAF in
    cifs_demultiplex_thread()") and that wile the commit mentions
    an UAF in >is_network_name_deleted() it should work as well for
    the smb2_is_status_io_timeout() case.
    But according to Ben this is another issue.
  masami: |-
    The smb2_is_status_io_timeout() was introduced by commit
    8e670f7 ("Handle STATUS_IO_TIMEOUT gracefully") in 5.10-rc1.
  ubuntu/sbeattie: |-
    this affects the KSMBD subsystem, which generally should not
      be used, userspace samba is the safer choice.
    marking the introduction of the cifsd/ksmbd config option as
      the break commit
    possible duplicate of CVE-2022-48425? The fixing commit is
      the same for both CVEs.
    quite likely 98bea253aa28ad8be2ce565a9ca21beb4a9419e5 is
      not an accurate fix for this issue.
introduced-by:
  mainline: [a848c4f15ab6d5d405dbee7de5da71839b2bf35e]
fixed-by:
  cip/6.1: [a8eaa9a06addbd9cb0238cb1c729921ecbb6504c]
  cip/6.1-rt: [a8eaa9a06addbd9cb0238cb1c729921ecbb6504c]
  mainline: [98bea253aa28ad8be2ce565a9ca21beb4a9419e5]
  stable/5.15: [2a67f26f70ab344ae6ea78638890eebc1191a501]
  stable/6.1: [a8eaa9a06addbd9cb0238cb1c729921ecbb6504c]
  ubuntu/focal: ['version:5.4.0-9.12']
ignore:
  cip/4.19: Not affected
  cip/4.19-rt: Not affected
  cip/4.4: Not affected
  cip/4.4-rt: Not affected
  cip/4.4-st: Not affected
  cip/5.10: Not affected
  cip/5.10-rt: Not affected
  stable/4.14: Not affected
  stable/4.19: Not affected
  stable/5.10: Not affected
  stable/5.4: Not affected
