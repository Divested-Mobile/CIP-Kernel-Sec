description: |-
  In the Linux kernel, the following vulnerability has been resolved:
  bpf: Defer the free of inner map when necessary
  When updating or deleting an inner map in map array or map htab, the map
  may still be accessed by non-sleepable program or sleepable program.
  However bpf_map_fd_put_ptr() decreases the ref-counter of the inner map
  directly through bpf_map_put(), if the ref-counter is the last one
  (which is true for most cases), the inner map will be freed by
  ops->map_free() in a kworker. But for now, most .map_free() callbacks
  don't use synchronize_rcu() or its variants to wait for the elapse of a
  RCU grace period, so after the invocation of ops->map_free completes,
  the bpf program which is accessing the inner map may incur
  use-after-free problem.
  Fix the free of inner map by invoking bpf_map_free_deferred() after both
  one RCU grace period and one tasks trace RCU grace period if the inner
  map has been removed from the outer map before. The deferment is
  accomplished by using call_rcu() or call_rcu_tasks_trace() when
  releasing the last ref-counter of bpf map. The newly-added rcu_head
  field in bpf_map shares the same storage space with work field to
  reduce the size of bpf_map.
references:
- https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-52447
- https://git.kernel.org/stable/c/62fca83303d608ad4fec3f7428c8685680bb01b0
- https://git.kernel.org/stable/c/f91cd728b10c51f6d4a39957ccd56d1e802fc8ee
- https://git.kernel.org/stable/c/bfd9b20c4862f41d4590fde11d70a5eeae53dcc5
- https://git.kernel.org/stable/c/876673364161da50eed6b472d746ef88242b2368
- https://lore.kernel.org/linux-cve-announce/2024022255-CVE-2023-52447-e074@gregkh/
comments:
  debian/carnil: |-
    Introduced with 638e4b825d52 ("bpf: Allows per-cpu maps and map-in-
    map in sleepable programs") 5.12-rc1.
  masami: "Introduced by commit 638e4b8 (\"bpf: Allows per-cpu maps and \nmap-in-map\
    \ in sleepable programs\") in 5.12-rc1-dontuse.\nThis commit is not backported\
    \ to older kernels.\nFixed in 6.8-rc1."
introduced-by:
  mainline: [bba1dc0b55ac462d24ed1228ad49800c238cd6d7, 638e4b825d523bed7a55e776c153049fb7716466]
fixed-by:
  cip/6.1: [62fca83303d608ad4fec3f7428c8685680bb01b0]
  cip/6.1-rt: [62fca83303d608ad4fec3f7428c8685680bb01b0]
  mainline: [876673364161da50eed6b472d746ef88242b2368]
  stable/6.1: [62fca83303d608ad4fec3f7428c8685680bb01b0]
  stable/6.6: [f91cd728b10c51f6d4a39957ccd56d1e802fc8ee]
  stable/6.7: [bfd9b20c4862f41d4590fde11d70a5eeae53dcc5]
