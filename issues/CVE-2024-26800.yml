description: |-
  In the Linux kernel, the following vulnerability has been resolved:
  tls: fix use-after-free on failed backlog decryption
  When the decrypt request goes to the backlog and crypto_aead_decrypt
  returns -EBUSY, tls_do_decryption will wait until all async
  decryptions have completed. If one of them fails, tls_do_decryption
  will return -EBADMSG and tls_decrypt_sg jumps to the error path,
  releasing all the pages. But the pages have been passed to the async
  callback, and have already been released by tls_decrypt_done.
  The only true async case is when crypto_aead_decrypt returns
   -EINPROGRESS. With -EBUSY, we already waited so we can tell
  tls_sw_recvmsg that the data is available for immediate copy, but we
  need to notify tls_decrypt_sg (via the new ->async_done flag) that the
  memory has already been released.
references:
- https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-26800
- https://git.kernel.org/stable/c/81be85353b0f5a7b660635634b655329b429eefe
- https://git.kernel.org/stable/c/1ac9fb84bc7ecd4bc6428118301d9d864d2a58d1
introduced-by:
  mainline: [8590541473188741055d27b955db0777569438e3]
  stable/6.1: [cd1bbca03f3c1d845ce274c0d0a66de8e5929f72]
  stable/6.6: [13eca403876bbea3716e82cdfe6f1e6febb38754]
fixed-by:
  mainline: [13114dc5543069f7b97991e3b79937b6da05f5b0]
  stable/6.1: [f2b85a4cc763841843de693bbd7308fe9a2c4c89]
  stable/6.6: [81be85353b0f5a7b660635634b655329b429eefe]
