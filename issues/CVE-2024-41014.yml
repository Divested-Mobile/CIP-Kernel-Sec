description: |-
  In the Linux kernel, the following vulnerability has been resolved:
  xfs: add bounds checking to xlog_recover_process_data
  There is a lack of verification of the space occupied by fixed members
  of xlog_op_header in the xlog_recover_process_data.
  We can create a crafted image to trigger an out of bounds read by
  following these steps:
      1) Mount an image of xfs, and do some file operations to leave records
      2) Before umounting, copy the image for subsequent steps to simulate
         abnormal exit. Because umount will ensure that tail_blk and
         head_blk are the same, which will result in the inability to enter
         xlog_recover_process_data
      3) Write a tool to parse and modify the copied image in step 2
      4) Make the end of the xlog_op_header entries only 1 byte away from
         xlog_rec_header->h_size
      5) xlog_rec_header->h_num_logops++
      6) Modify xlog_rec_header->h_crc
  Fix:
  Add a check to make sure there is sufficient space to access fixed members
  of xlog_op_header.
references:
- https://www.cve.org/CVERecord?id=CVE-2024-41014
- https://git.kernel.org/linus/fb63435b7c7dc112b1ae1baea5486e0a6e27b196
- https://git.kernel.org/stable/c/fb63435b7c7dc112b1ae1baea5486e0a6e27b196
fixed-by:
  mainline: [fb63435b7c7dc112b1ae1baea5486e0a6e27b196]
