description: |-
  In the Linux kernel, the following vulnerability has been resolved:
  Squashfs: sanity check symbolic link size
  Syzkiller reports a "KMSAN: uninit-value in pick_link" bug.
  This is caused by an uninitialised page, which is ultimately caused
  by a corrupted symbolic link size read from disk.
  The reason why the corrupted symlink size causes an uninitialised
  page is due to the following sequence of events:
  1. squashfs_read_inode() is called to read the symbolic
     link from disk.  This assigns the corrupted value
     3875536935 to inode->i_size.
  2. Later squashfs_symlink_read_folio() is called, which assigns
     this corrupted value to the length variable, which being a
     signed int, overflows producing a negative number.
  3. The following loop that fills in the page contents checks that
     the copied bytes is less than length, which being negative means
     the loop is skipped, producing an uninitialised page.
  This patch adds a sanity check which checks that the symbolic
  link size is not larger than expected.
  --
  V2: fix spelling mistake.
references:
- https://www.cve.org/CVERecord?id=CVE-2024-46744
- https://git.kernel.org/linus/810ee43d9cd245d138a2733d87a24858a23f577d
- https://git.kernel.org/stable/c/f82cb7f24032ed023fc67d26ea9bf322d8431a90
- https://git.kernel.org/stable/c/1b9451ba6f21478a75288ea3e3fca4be35e2a438
- https://git.kernel.org/stable/c/5c8906de98d0d7ad42ff3edf2cb6cd7e0ea658c4
- https://git.kernel.org/stable/c/087f25b2d36adae19951114ffcbb7106ed405ebb
- https://git.kernel.org/stable/c/fac5e82ab1334fc8ed6ff7183702df634bd1d93d
- https://git.kernel.org/stable/c/c3af7e460a526007e4bed1ce3623274a1a6afe5e
- https://git.kernel.org/stable/c/ef4e249971eb77ec33d74c5c3de1e2576faf6c90
- https://git.kernel.org/stable/c/810ee43d9cd245d138a2733d87a24858a23f577d
fixed-by:
  mainline: [810ee43d9cd245d138a2733d87a24858a23f577d]
