description: |
  Summary of issue, ideally the description MITRE uses. (required)
advisory: |
  Longer explanation of issue, suitable as basis for advisory text.
  This is optional but should be added by the time fixes are released.
references:
  - URL giving longer explanation of issue (optional)
  # List any number of references, but try to avoid redundancy
aliases: Identifiers used for issue, other than CVE ID (optional)
comments:
  name: Comments from named developer (optional)
reporters:
  - Name and email address for each entity that can be publicly credited
    for reporting the issue (optional)
embargo-end: End of any embargo period for the issue (optional)
introduced-by:
  mainline: [0123456789abcdef0123456789abcdef01234567]
  # List multiple commits if the issue results from the combination of
  # several otherwise harmless changes, or if the CVE covers several
  # similar bugs introduced by multiple commits.
  # Put 'never' if issue does not exist on mainline.
  other-branch: [123456789abcdef0123456789abcdef012345678]
  # List any other branches where the vulnerability was introduced by
  # a backport.
fixed-by:
  mainline: [23456789abcdef0123456789abcdef0123456789]
  # List all commits that were made in response to this specific issue.
  # Put 'never' if issue has not yet been fixed.
  other-branch: [3456789abcdef0123456789abcdef01234567890]
  # List all commits that are backports of the fix.
fix-depends-on:
  456789abcdef0123456789abcdef012345678901: |
    Explanation of why the fix in mainline depends on this commit, and
    whether this dependency can be avoided when backporting.
ignore:
  some-branch: |
    Explanation of why this issue can be ignored (by default) on a
    given branch.
  all: |
    Explanation of why this issue can be ignored (by default) in general.
tests: [test-program]
# List all related test programs under ../tests/.  For compiled programs,
# give the executable name.
